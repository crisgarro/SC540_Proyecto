@page "/user_list"
@using Backend.Models
@using Backend.Services
@inject IDialogService DialogService

<MudContainer>
    <MudText Typo="Typo.h3" GutterBottom="true">Lista de Usuarios</MudText>
    <MudText Class="mb-8">Lista de Usuarios del Sistema</MudText>
    <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="AddUser">Nuevo Usuario</MudButton>
    <MudDataGrid T="UserModel" Items="@_userList" QuickFilter="@QuickFilter" Hideable="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Usuarios</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Buscar" Adornment="Adornment.Start" Immediate="true" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
            </MudTextField>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Hidden="true" Property="x => x.UserID" />
            <PropertyColumn Title="Usuario" Property="x => x.Username" />            
            <PropertyColumn Title="Email" Property="x => x.Email" />
            <PropertyColumn Title="Nombre" Property="x => x.FirstName" />
            <PropertyColumn Title="Apellido" Property="x => x.LastName" />            
            <PropertyColumn Title="Teléfono" Property="x => x.Phone" />
            <PropertyColumn Title="Último Inicio de Sesión" Property="x => x.Last_Login" />
            <PropertyColumn Title="Cambiar Contraseña" Property="x => x.Require_Change_Password">
                <CellTemplate>
                    @if (@context.Item.Require_Change_Password)
                    {
                        <span>Si</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Title="Acción" Property="x => x.Enabled">
                <CellTemplate>
                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(() => EditUser(@context.Item))">Editar</MudButton>
                </CellTemplate>
            </PropertyColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="UserModel" PageSizeOptions="new int[] { 20, 50 }" RowsPerPageString="Registros Por Pagina" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private IEnumerable<UserModel> _userList;
    private readonly UserService _userService = new();
    private string _searchString;

    private async Task LoadUsers()
    {
        _userList = await _userService.GetAllUsers();
    }

    private Func<UserModel, bool> QuickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.Username.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ||
            x.Email.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task AddUser()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small };

        var dialog = DialogService.Show<AddEditUser>("Dialog", options);
        var result = await dialog.Result;
        await LoadUsers();
    }

    private async Task EditUser(UserModel model)
    {
        var parameters = new DialogParameters
        {
            { "EditMode", true },
            { "ExistingRecord", model }
        };
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small };

        var dialog = DialogService.Show<AddEditUser>("Dialog", parameters, options);
        var result = await dialog.Result;
        await LoadUsers();
    }
}
